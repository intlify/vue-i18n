name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
permissions:
  contents: read
env:
  CI: true

jobs:
  lint:
    name: Lint
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Lint codes
        run: pnpm lint

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build codes
        run: pnpm build --all -t

      - name: Cache dist
        uses: actions/cache@v3
        with:
          path: packages/*/dist
          key: build-vue-i18n-next-os-${{ matrix.os }}-${{ github.sha }}

  test-unit:
    name: Unit test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [14, 16]
        #node: [14, 16, 18.0]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run unit tests
        run: |
          pnpm clean:cache:jest
          pnpm test:cover

  test-type:
    name: Type checking
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run type checking
        run: pnpm test:type

  test-e2e:
    name: E2E test

    needs:
      - build

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [14, 16]
        #node: [14, 16, 18.0]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Restore dist cache
        uses: actions/cache@v3
        with:
          path: packages/*/dist
          key: build-vue-i18n-next-os-${{ matrix.os }}-${{ github.sha }}

      - name: Run e2e tests
        run: pnpm test:e2e

  edge-release:
    if: |
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, '[skip-release]') &&
      !contains(github.event.head_commit.message, 'chore') &&
      !contains(github.event.head_commit.message, 'docs')

    needs:
      - lint
      - build
      - test-unit
      - test-type
      - test-e2e

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Restore dist cache
        uses: actions/cache@v3
        with:
          path: packages/*/dist
          key: build-vue-i18n-next-os-${{ matrix.os }}-${{ github.sha }}

      - name: Release edge version
        run: ./scripts/release-edge.sh
        env:
          NPM_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
