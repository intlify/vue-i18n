// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linked key: hi @:name ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", ctx.message(\\"name\\")(ctx), \\" !\\"
  ])
}"
`;

exports[`linked list: hi @:{0} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", ctx.message(ctx.interpolate(ctx.list(0)))(ctx), \\" !\\"
  ])
}"
`;

exports[`linked modifier: hi @.upper:(name) ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", ctx.modifier(\\"upper\\")(ctx.message(\\"name\\")(ctx), ctx.type), \\" !\\"
  ])
}"
`;

exports[`linked named: hi @:{name} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", ctx.message(ctx.interpolate(ctx.named(\\"name\\")))(ctx), \\" !\\"
  ])
}"
`;

exports[`list basic: hi {0} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", ctx.interpolate(ctx.list(0)), \\" !\\"
  ])
}"
`;

exports[`list multiple: {0} {1} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    ctx.interpolate(ctx.list(0)), \\" \\", ctx.interpolate(ctx.list(1)), \\" !\\"
  ])
}"
`;

exports[`literal !#%^&*()-_+=[]:;?.<>"\`: hi {'!#%^&*()-_+=[]:;?.<>"\`'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"!#%^&*()-_+=[]:;?.<>\\\\\\"\`\\", \\" !\\"
  ])
}"
`;

exports[`literal {}: {'{}'} 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"{}\\"
  ])
}"
`;

exports[`literal ascii: hi {'kazupon'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"kazupon\\", \\" !\\"
  ])
}"
`;

exports[`literal emoji: hi {'üò∫'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"üò∫\\", \\" !\\"
  ])
}"
`;

exports[`literal escaped single quote: hi {'\\''} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"\\\\\\\\'\\", \\" !\\"
  ])
}"
`;

exports[`literal escaped slash: hi {'\\\\'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"\\\\\\\\\\\\\\\\\\", \\" !\\"
  ])
}"
`;

exports[`literal escaped unicode 4 digits: hi {'\\\\u0041'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"\\\\\\\\\\\\\\\\u0041\\", \\" !\\"
  ])
}"
`;

exports[`literal escaped unicode 6 digits: hi {'\\\\U01F602'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"\\\\\\\\\\\\\\\\U01F602\\", \\" !\\"
  ])
}"
`;

exports[`literal multibytes: hi {'„Åã„Åö„ÅΩ„Çì'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"„Åã„Åö„ÅΩ„Çì\\", \\" !\\"
  ])
}"
`;

exports[`literal unicode 4 digits: hi {'A'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"A\\", \\" !\\"
  ])
}"
`;

exports[`literal unicode 6 digits: hi {'U01F602'} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", \\"U01F602\\", \\" !\\"
  ])
}"
`;

exports[`named basic: hi {name} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hi \\", ctx.interpolate(ctx.named(\\"name\\")), \\" !\\"
  ])
}"
`;

exports[`named multiple: {greeting} {name} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    ctx.interpolate(ctx.named(\\"greeting\\")), \\" \\", ctx.interpolate(ctx.named(\\"name\\")), \\" !\\"
  ])
}"
`;

exports[`plural complex: @.caml:(no apples) | {0} apple | {n}„ÄÄapples 1`] = `
"function __msg__ (ctx) {
  return [
    ctx.normalize([
      ctx.modifier(\\"caml\\")(ctx.message(\\"no apples\\")(ctx), ctx.type)
    ]), ctx.normalize([
      ctx.interpolate(ctx.list(0)), \\" apple\\"
    ]), ctx.normalize([
      ctx.interpolate(ctx.named(\\"n\\")), \\"„ÄÄapples\\"
    ])
  ][ctx.pluralRule(ctx.pluralIndex, 3, ctx.orgPluralRule)]
}"
`;

exports[`plural simple: no apples | one apple  |  too much apples   1`] = `
"function __msg__ (ctx) {
  return [
    ctx.normalize([
      \\"no apples\\"
    ]), ctx.normalize([
      \\"one apple\\"
    ]), ctx.normalize([
      \\"too much apples  \\"
    ])
  ][ctx.pluralRule(ctx.pluralIndex, 3, ctx.orgPluralRule)]
}"
`;

exports[`text basic: hello world 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hello world\\"
  ])
}"
`;

exports[`text multline: hello
 world 1`] = `
"function __msg__ (ctx) {
  return ctx.normalize([
    \\"hello\\\\n world\\"
  ])
}"
`;
